<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.member.persistence.MemberMapper">

	<insert id="addMember">
		INSERT INTO memberSec(id, pw, name, email, gender) 
		VALUES (#{id}, #{pw}, #{name}, #{email}, #{gender})
	</insert>
	<insert id="addAuth">
		INSERT INTO memberSec_auth(id, auth) 
		VALUES(#{id}, #{auth})
	</insert>

	<!--
	MemberVO 안에 컬렉션 List가 있으므로 SLEECT 문 날려서 가져오는 결과를 MemberVO 안에 바인딩 시키고,
	결과물을 리턴해주기 위해 result(리턴)타입인 MemberVO 타입을 mybatis에서 잘 처리되도록 새로 정의하기 : resultMap 태그 사용.
	-->
	<!-- 회원정보 테이블의 데이터를 MemberVO의 변수에 각각 바인딩되도록 컬럼 - 변수 세트 명확히 정의 -->
	<resultMap type="com.member.domain.MemberVO" id="memberMap">
		<id property="id" column="id" /> <!-- primary key 지정 -->
		<result property="id" column="id" />
		<result property="pw" column="pw" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="gender" column="gender" />
		<result property="reg" column="reg" />
		<result property="enabled" column="enabled" />
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	<!-- 권한 테이블 값을 AuthVO 클래스에 대입하는 것 명확히 정의 -->
	<resultMap type="com.member.domain.AuthVO" id="authMap">
		<result property="id" column="id" />
		<result property="auth" column="auth" />
	</resultMap>

	<select id="getMember" resultMap="memberMap">
		SELECT m.*, a.auth
		FROM memberSec m, memberSec_auth a
		WHERE m.id = a.id
		AND m.id = #{id}
	</select>
	
	<update id="updateMember">
		UPDATE memberSec set name = #{name}, email = #{email} 
		WHERE id = #{id}
	</update>
	
	<delete id="deleteMember"> 
		DELETE FROM memberSec 
		where id = #{id}
	</delete>
	<delete id="deleteAuth">
		DELETE FROM memberSec_auth 
		WHERE id = #{id}
	</delete>
	
	<select id="idPwCheck" resultType="int">
		SELECT COUNT(*) FROM memberSec WHERE id = #{id}
		<if test="pw != null">
			AND pw = #{pw}
		</if>
	</select>

</mapper>